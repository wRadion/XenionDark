<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:XenionDark">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/XenionDark;component/Themes/Generic/Resources/Colors.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <sys:Double x:Key="Box.Size">24</sys:Double>

    <ControlTemplate x:Key="SubmenuMenuItem" TargetType="{x:Type local:MenuItem}">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="32" SharedSizeGroup="MenuItemIconColumnGroup" Width="auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="auto" />
                </Grid.ColumnDefinitions>

                <Border Grid.Column="0" Background="{StaticResource Clear.Darker}">
                    <Grid>
                        <ContentPresenter x:Name="Icon"
                                          Content="{TemplateBinding Icon}"
                                          ContentSource="Icon"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Width="{StaticResource Box.Size}"
                                          Height="{StaticResource Box.Size}" />

                        <Border x:Name="checkBox"
                                Background="{StaticResource In.Background.Normal}"
                                BorderBrush="{StaticResource Border.Normal}"
                                BorderThickness="1"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Width="{StaticResource Box.Size}"
                                Height="{StaticResource Box.Size}"
                                Visibility="Hidden">
                            <local:TextBlock x:Name="checkBoxText"
                                             Foreground="{StaticResource Foreground.Normal}"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Center" />
                        </Border>
                    </Grid>
                </Border>

                <ContentPresenter Grid.Column="1"
                                  TextElement.Foreground="{TemplateBinding Foreground}"
                                  TextElement.FontFamily="{TemplateBinding FontFamily}"
                                  TextElement.FontSize="{TemplateBinding FontSize}"
                                  ContentTemplate="{TemplateBinding HeaderTemplate}"
                                  Content="{TemplateBinding Header}"
                                  ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                  ContentSource="Header"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"
                                  Margin="{TemplateBinding Padding}"
                                  RecognizesAccessKey="True" />

                <local:TextBlock x:Name="gestureText"
                                 Grid.Column="2"
                                 Foreground="{TemplateBinding Foreground}"
                                 FontFamily="{TemplateBinding FontFamily}"
                                 FontSize="{TemplateBinding FontSize}"
                                 Opacity="0.5"
                                 Text="{TemplateBinding InputGestureText}"
                                 HorizontalAlignment="Right"
                                 VerticalAlignment="Center"
                                 Margin="{TemplateBinding Padding}" />

                <Popup x:Name="PART_Popup"
                       IsOpen="{Binding IsHighlighted, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                       IsEnabled="{Binding Path=HasItems, Mode=OneTime, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                       StaysOpen="False"
                       AllowsTransparency="True"
                       Placement="Right">
                    <Border Background="{Binding Background, RelativeSource={RelativeSource AncestorType=MenuBase}}"
                            BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType=MenuBase}}"
                            BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource AncestorType=MenuBase}}"
                            Padding="{Binding Padding, RelativeSource={RelativeSource AncestorType=MenuBase}}">
                        <ItemsPresenter />
                    </Border>
                </Popup>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>

            <Trigger Property="HasItems" Value="True">
                <Setter TargetName="gestureText" Property="Text" Value="⯈" />
                <Setter TargetName="gestureText" Property="Opacity" Value="1" />
            </Trigger>

            <Trigger Property="IsCheckable" Value="True">
                <Setter TargetName="checkBox" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon"     Property="Visibility" Value="Collapsed" />
            </Trigger>

            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="checkBoxText" Property="Text"     Value="✔" />
                <Setter TargetName="checkBoxText" Property="FontSize" Value="16px" />
                <Setter TargetName="checkBoxText" Property="Margin"   Value="0 2px 0 0" />
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Out.Background.Hover}" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" Value="{StaticResource Out.Background.Hover}" />
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource Foreground.Disabled}" />
                <Setter TargetName="checkBox" Property="Background" Value="{StaticResource Background.Disabled}" />
                <Setter TargetName="Icon" Property="Opacity" Value="0.33" />
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="False" />
                    <Condition Property="IsChecked" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="checkBoxText" Property="Foreground"  Value="{StaticResource Foreground.Disabled}" />
                <Setter TargetName="checkBox"     Property="BorderBrush" Value="Transparent" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Role" Value="SubmenuItem" />
                    <Condition Property="IsPressed" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource Out.Background.Pressed}" />
                <Setter Property="Foreground" Value="{StaticResource Foreground.Pressed}" />
                <Setter Property="BorderBrush" Value="{StaticResource Border.Pressed}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="TopLevelMenuItem" TargetType="{x:Type local:MenuItem}">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
            <StackPanel Orientation="Horizontal">
                <Border x:Name="iconOrCheckBoxBorder"
                        Grid.Column="0"
                        Background="Transparent"
                        Margin="0px 0px -8px 0px"
                        Padding="4px">
                    <Grid>
                        <ContentPresenter x:Name="Icon"
                                          Content="{TemplateBinding Icon}"
                                          ContentSource="Icon"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Width="{StaticResource Box.Size}"
                                          Height="{StaticResource Box.Size}" />

                        <Border x:Name="checkBox"
                                Background="{StaticResource In.Background.Normal}"
                                BorderBrush="{StaticResource Border.Normal}"
                                BorderThickness="1"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Width="{StaticResource Box.Size}"
                                Height="{StaticResource Box.Size}"
                                Visibility="Collapsed">
                            <local:TextBlock x:Name="checkBoxText"
                                             Foreground="{StaticResource Foreground.Normal}"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Center" />
                        </Border>
                    </Grid>
                </Border>

                <ContentPresenter Grid.Column="1"
                                  TextElement.Foreground="{TemplateBinding Foreground}"
                                  TextElement.FontFamily="{TemplateBinding FontFamily}"
                                  TextElement.FontSize="{TemplateBinding FontSize}"
                                  ContentTemplate="{TemplateBinding HeaderTemplate}"
                                  Content="{TemplateBinding Header}"
                                  ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                  ContentSource="Header"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"
                                  Margin="{TemplateBinding Padding}"
                                  RecognizesAccessKey="True" />

                <Popup x:Name="PART_Popup"
                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                       IsEnabled="{Binding Path=HasItems, Mode=OneTime, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                       StaysOpen="False"
                       AllowsTransparency="True"
                       Placement="Bottom">
                    <Border Background="{Binding Background, RelativeSource={RelativeSource AncestorType=MenuBase}}"
                            BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType=MenuBase}}"
                            BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource AncestorType=MenuBase}}"
                            Padding="{Binding Padding, RelativeSource={RelativeSource AncestorType=MenuBase}}">
                        <ItemsPresenter />
                    </Border>
                </Popup>
            </StackPanel>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="iconOrCheckBoxBorder" Property="Visibility" Value="Collapsed" />
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Icon" Value="{x:Null}" />
                    <Condition Property="IsCheckable" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="iconOrCheckBoxBorder" Property="Visibility" Value="Collapsed" />
            </MultiTrigger>

            <Trigger Property="IsCheckable" Value="True">
                <Setter TargetName="iconOrCheckBoxBorder" Property="Visibility" Value="Visible" />
                <Setter TargetName="checkBox" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon"     Property="Visibility" Value="Collapsed" />
            </Trigger>

            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="checkBoxText" Property="Text"     Value="✔" />
                <Setter TargetName="checkBoxText" Property="FontSize" Value="16px" />
                <Setter TargetName="checkBoxText" Property="Margin"   Value="0 2px 0 0" />
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Out.Background.Hover}" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" Value="{StaticResource Out.Background.Hover}" />
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Role" Value="TopLevelItem" />
                    <Condition Property="IsPressed" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource Out.Background.Pressed}" />
                <Setter Property="Foreground" Value="{StaticResource Foreground.Pressed}" />
                <Setter Property="BorderBrush" Value="{StaticResource Border.Pressed}" />
            </MultiTrigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource Foreground.Disabled}" />
                <Setter TargetName="checkBox" Property="Background" Value="{StaticResource Background.Disabled}" />
                <Setter TargetName="Icon" Property="Opacity" Value="0.33" />
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="False" />
                    <Condition Property="IsChecked" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="checkBoxText" Property="Foreground"  Value="{StaticResource Foreground.Disabled}" />
                <Setter TargetName="checkBox"     Property="BorderBrush" Value="Transparent" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type local:MenuItem}">
        <Setter Property="Background"  Value="Transparent" />
        <Setter Property="Foreground"  Value="{StaticResource Foreground.Normal}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="FontFamily" Value="{StaticResource Main.FontFamily}" />
        <Setter Property="FontSize"   Value="{StaticResource Main.FontSize}" />

        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Focusable" Value="True" />

        <Setter Property="Padding" Value="12px 9px" />

        <Style.Triggers>
            <!-- Menu bar -->
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource TopLevelMenuItem}" />
            </Trigger>

            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource TopLevelMenuItem}" />
            </Trigger>

            <!-- Context Menu / Submenu -->
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource SubmenuMenuItem}" />
            </Trigger>

            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource SubmenuMenuItem}" />
            </Trigger>

            <!-- Horizontal Separator -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="HasHeader" Value="False" />
                    <Condition Property="Role" Value="SubmenuItem" />
                </MultiTrigger.Conditions>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:MenuItem}">

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="32" SharedSizeGroup="MenuItemIconColumnGroup" Width="auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Border Grid.Column="0" Background="{StaticResource Clear.Darker}" />

                                <Border Grid.Column="0"
                                        Grid.ColumnSpan="2"
                                        Background="{StaticResource Border.Normal}"
                                        Height="1" />
                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>

            <!-- Vertical Separator -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="HasHeader" Value="False" />
                    <Condition Property="Role" Value="TopLevelItem" />
                </MultiTrigger.Conditions>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:MenuItem}">

                            <Border Background="{StaticResource Border.Normal}" Width="1" />

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
