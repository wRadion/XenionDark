<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:XenionDark.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/XenionDark;component/Themes/Generic/Resources/Colors.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="XenionDark.TabItem" TargetType="{x:Type TabItem}">
        <Setter Property="Background"  Value="{StaticResource In.Background.Normal}" />
        <Setter Property="Foreground"  Value="{StaticResource Foreground.Normal}" />
        <Setter Property="BorderBrush" Value="{StaticResource Border.Normal}" />
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="FontFamily" Value="{StaticResource Main.FontFamily}" />
        <Setter Property="FontSize"   Value="{StaticResource Main.FontSize}" />

        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource Main.FocusVisualStyle}" />

        <Setter Property="MinHeight" Value="{StaticResource Main.MinHeight}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="{StaticResource Main.DefaultPadding}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">

                    <Grid x:Name="grid"
                          Background="{TemplateBinding Background}"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter ContentSource="Header"
                                          Focusable="False"
                                          TextElement.Foreground="{TemplateBinding Foreground}"
                                          TextElement.FontFamily="{TemplateBinding FontFamily}"
                                          TextElement.FontSize="{TemplateBinding FontSize}"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                          VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" Value="False">
                            <Setter Property="Background" Value="{StaticResource Clear.SlightlyLighter}" />
                            <Setter Property="Foreground" Value="{StaticResource Foreground.Pressed}" />
                            <Setter Property="Opacity"    Value="1" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter Property="Background" Value="{StaticResource Clear.Lighter}" />
                            <Setter Property="Foreground" Value="{StaticResource Foreground.Hover}" />
                            <Setter Property="Opacity"    Value="1" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource Foreground.Disabled}" />
                            <Setter Property="Opacity"    Value="1" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter Property="Background"   Value="{StaticResource Background.Normal}" />
                            <Setter Property="Foreground"   Value="{StaticResource Foreground.Hover}" />
                            <Setter Property="Opacity"      Value="1" />
                            <Setter Property="Panel.ZIndex" Value="1" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left">
                            <Setter TargetName="grid" Property="Margin" Value="0 0 0 2" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom">
                            <Setter TargetName="grid" Property="Margin" Value="0 0 2 0" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right">
                            <Setter TargetName="grid" Property="Margin" Value="0 0 0 2" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top">
                            <Setter TargetName="grid" Property="Margin" Value="0 0 2 0" />
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="False" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Margin" Value="2 0 0 0" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="False" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Margin" Value="0 0 0 2" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="False" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Margin" Value="0 0 2 0" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="False" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Margin" Value="0 2 0 0" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>